@import url("../../../assets/styles/_colors.scss");

@mixin setColors($bg, $color) {
  background-color: $bg;
  color: $color;
}

.content-wrapper{
  display: grid;
  grid-template-rows: 64px 1fr;
  .search-bar-wrapper{
    height: 100%;
    display: flex;
    align-items: center;
    color: var(--green-dark-3);
    background-color: var(--green);
    padding: 0 15px 2px 15px;
    .content{
      background-color: white;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: space-between;
      width: 100%;
      padding: 0 10px;
      .title{
        display: flex;
        gap: 15px;
        align-items: center;
        span{
          font-size: 25px;
          color: var(--green-dark-2);
          margin-right: 10px;
          font-weight: 600;
        }
        .flex{
          column-gap: 5px;
        }
      }
      .flex{
        height: 45px;
        color: var(--green-dark-2);
        .input-container{
          position: relative;
          height: 100%;
          width: 500px;
          display: flex;
          input{
            height: 100%;
            padding-left: 40px;
            flex: 1 0 auto;
            &::placeholder{
              font-weight: bold;
              color: #0000004d;
            }
          }
          i{
            position: absolute;
            top: 13px;
            left: 15px;
          }
        }
        .cta-filter{
          border-radius: 5px;
          background-color: var(--green);
          font-weight: bold;
          transform: scale(1);
          transition: all 0.2s ease-in-out;
          height: 40px;
          &:hover{
            transform: scale(1.05);
          }
          &:active{
            transform: scale(0.98);
          }
          &.add{
            background-color: var(--green-dark);
            color: white;
          }

        }
        button{
          color: var(--green-dark-2);
          background-color: transparent;
          transform: scale(1.2);
        }
      }
    }
  }
  .loading{
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 99999;
    background-color: var(--padrao-grey);
    height: 100vh;
    width: 100vw;
    display: grid;
    place-items: center;
    &::ng-deep .mat-progress-spinner circle{
      stroke: var(--green);
    }
  }
}

/*#region cdk-drag-and-drop*/

.flow-wrapper{
  height: calc(100vh - 64px);
  padding: 40px 10px;
  position: relative;
  .columns-container{
    position: absolute;
    height: 100%;
    max-width: calc(100% - 20px);
    overflow: auto;
    padding: 0 10px 20px 10px;
    display: flex;
  }
}

.column {
  min-width: 330px;
  max-width: 100%;
  margin: 0 25px 25px 0;
  display: flex;
  flex-direction: column;
  height: max-content;
  .top{
    @include setColors(var(--green), white);
    height: 50px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-weight: bold;
    border-radius: 10px 0 10px 0;
    padding: 0 15px;
    z-index: 1;
    > .flex{
      .flex{
        column-gap: 5px;
      }
      .default-circle{
        @include setColors(white, var(--green));
      }
    }
  }
  .card-list {
    min-height: 800px;
    background: var(--padrao-grey);
    border-radius: 0 0 5px 5px;
    display: flex;
    flex-direction: column;
    row-gap: 15px;
    box-shadow: 0px 8px 8px var(--padrao-dark-3);
    margin-top: -8px;
    padding: 18px 5px;

  }
}

.cdk-drag-preview {
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
  border-radius: 5px;
}

::ng-deep .cdk-drag-placeholder {
  opacity: 0;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.card-list.cdk-drop-list-dragging .card:not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

/*#endregion */
